library(shiny)
library(ggplot2)

# Input data
data <- data.frame(
  Month = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
  x1 = c(150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260),
  x2 = c(8, 9.5, 10, 10.5, 11, 9, 11.5, 12, 12.5, 13, 14, 15),
  x3 = c(5, 4.5, 4.8, 4.6, 5.1, 4.7, 4.9, 5, 5.2, 5.3, 5.4, 5.5),
  x4 = c(8.5, 8.2, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 8.7, 8.8, 8.9, 9),
  x5 = c(20, 22, 25, 23, 30, 28, 27, 35, 40, 45, 50, 60),
  y = c(120, 150, 160, 165, 180, 170, 190, 210, 230, 250, 300, 350)
)

# Fit the model
model <- lm(y ~ x1 + x2 + x3 + x4 + x5, data = data)

# Summary of the model
summary(model)

# Define UI
ui <- fluidPage(
  titlePanel("Sales Prediction Dashboard"),
  sidebarLayout(
    sidebarPanel(
      numericInput("input_x1", "Variable x1 (Visitors):", min = 150, max = 260, value = 200),
      numericInput("input_x2", "Variable x2 (Transactions):", min = 8, max = 15, value = 9),
      numericInput("input_x3", "Variable x3 (Items/Transaction):", min = 4.5, max = 5.5, value = 5),
      numericInput("input_x4", "Variable x4 (Rating):", min = 8.5, max = 9, value = 8.7),
      numericInput("input_x5", "Variable x5 (Ads):", min = 20, max = 60, value = 30),
      actionButton("predictButton", "Predict"),
      br(),
      h4("Predicted Sales:"),
      textOutput("predictedSales")
    ),
    mainPanel(
      plotOutput("regressionPlot")
    )
  )
)

# Define server
server <- function(input, output) {
  # Predict sales
  predicted_sales <- reactive({
    new_data <- data.frame(
      x1 = input$input_x1,
      x2 = input$input_x2,
      x3 = input$input_x3,
      x4 = input$input_x4,
      x5 = input$input_x5
    )
    predict(model, newdata = new_data)
  })
  
  # Display predicted sales
  output$predictedSales <- renderText({
    paste("Predicted Sales: ", round(predicted_sales(), 2))
  })
  
  # Display regression plot
  output$regressionPlot <- renderPlot({
    ggplot(data, aes(x = y, y = predict(model))) +
      geom_point() +
      geom_abline(intercept = model$coefficients[1], slope = model$coefficients[2], color = "blue") +
      labs(title = "Regression Plot", x = "Actual Sales", y = "Predicted Sales")
  })
}

# Run the Shiny App
shinyApp(ui, server)
