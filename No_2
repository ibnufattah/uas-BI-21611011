# Load required libraries
library(shiny)
library(tidyverse)

# Define UI
ui <- fluidPage(
  titlePanel("Ad Placement Analysis"),
  
  sidebarLayout(
    sidebarPanel(
      fileInput("file", "Upload Data (CSV file)", multiple = FALSE),
      tags$hr(),
      h4("Or Enter Data Manually:"),
      numericInput("left_sidebar", "Left Sidebar CTR:", value = 3),
      numericInput("center_page", "Center Page CTR:", value = 3),
      numericInput("right_sidebar", "Right Sidebar CTR:", value = 3),
      actionButton("analyze_btn", "Analyze", class = "btn-primary")
    ),
    
    mainPanel(
      tabsetPanel(
        tabPanel("Data Summary", verbatimTextOutput("summary")),
        tabPanel("Visualization", plotOutput("plot")),
        tabPanel("Results", verbatimTextOutput("results"))
      )
    )
  )
)

# Define server logic
server <- function(input, output) {
  
  data <- reactive({
    if (is.null(input$file)) {
      # Use default data if no file is uploaded
      default_data <- data.frame(
        Day = 1:10,
        Left_Sidebar = c(2.5, 2.7, 2.8, 2.6, 3.0, 2.4, 2.9, 2.5, 2.6, 2.7),
        Center_Page = c(3.8, 3.5, 4.0, 3.7, 3.9, 3.6, 4.1, 3.4, 3.8, 3.9),
        Right_Sidebar = c(3.1, 2.9, 3.0, 3.2, 3.3, 2.8, 3.4, 3.1, 3.2, 3.5)
      )
      return(default_data)
    } else {
      # Read data from the uploaded file
      return(read.csv(input$file$datapath))
    }
  })
  
  # Display data summary
  output$summary <- renderPrint({
    summary(data())
  })
  
  # Generate and display a boxplot
  output$plot <- renderPlot({
    boxplot(data()[, -1], col = c("blue", "green", "red"), main = "CTR by Ad Placement", ylab = "CTR")
  })
  
  # Perform statistical analysis and display results
  output$results <- renderPrint({
    # Perform ANOVA to compare means
    anova_result <- aov(data()$Left_Sidebar ~ data()$Center_Page + data()$Right_Sidebar, data = data())
    
    # Extract p-value
    p_value <- summary(anova_result)[["Pr(>F)"]][1]
    
    # Determine significance
    significance <- ifelse(p_value < 0.05, "Significant", "Not Significant")
    
    # Display results
    results <- c("Analysis Results:",
                 paste("  - p-value: ", format(p_value, digits = 4)),
                 paste("  - Significance: ", significance))
    
    return(results)
  })
}

# Run the Shiny app
shinyApp(ui = ui, server = server)
